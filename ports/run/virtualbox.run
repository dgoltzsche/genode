set build_components {
	core init virtualbox 
	server/ram_fs
	drivers/input
	drivers/framebuffer
	drivers/timer
}

lappend_if [have_spec acpi]  build_components drivers/acpi
lappend_if [have_spec pci]   build_components drivers/pci

build $build_components

create_boot_directory

set config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service><parent/><any-child/></any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="ram_fs">
		<resource name="RAM" quantum="256M"/>
		<provides><service name="File_system"/></provides>
		<config>
			<content>
				<dir name="iso">
					<rom name="test.iso" />
				</dir>
			</content>
			<policy label="" root="/" writeable="yes" />
		</config>
	</start>}

append_if [have_spec acpi] config {
	<start name="acpi">
		<resource name="RAM" quantum="5M"/>
		<binary name="acpi_drv"/>
		<provides>
			<service name="PCI"/>
			<service name="IRQ" />
		</provides>
		<route>
			<service name="PCI"> <any-child /> </service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>}

append_if [expr ![have_spec acpi] && [have_spec pci]] config {
	<start name="pci_drv">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="PCI"/> </provides>
	</start> }

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }

append_if [have_spec framebuffer] config {
	<start name="fb_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec sdl] config {
	<start name="fb_sdl">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Input"/>
			<service name="Framebuffer"/>
		</provides>
	</start>}

append config {
	<start name="virtualbox">
		<resource name="RAM" quantum="1G"/>
		<config>
			<image type="iso" file="/iso/test.iso" />
		</config>
		<route>
			<service name="File_system"> <child name="ram_fs"/> </service>
			<any-service> <parent/> <any-child /> </any-service>
		</route>
	</start>
</config>
}

install_config $config

set boot_modules { core init timer virtualbox ram_fs test.iso }

# platform-specific modules
lappend_if [have_spec         ps2] boot_modules ps2_drv
lappend_if [have_spec        acpi] boot_modules acpi_drv
lappend_if [have_spec         pci] boot_modules pci_drv
lappend_if [have_spec framebuffer] boot_modules fb_drv
lappend_if [have_spec       linux] boot_modules fb_sdl
lappend_if [have_spec        nova] boot_modules pci_device_pd

build_boot_image $boot_modules

append qemu_args " -m 512 "
append qemu_args " -cpu phenom "

run_genode_until forever
